
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================
module DE2_115_Concentrator(

	input CLOCK_50,
	input Pon,
	input [`sensors_number - 1:0]uart_channel_data,
	input sink_ready,
	output wire [7:0]avalon_st_data,
	output wire avalon_st_valid,
	output wire avalon_st_startofpacket,
	output wire avalon_st_endofpacket,
	output wire rd_en_without_DMA_ready,
	output wire trans_en_ok_rx,
	output wire trans_en_CRC,
	output wire [1:0]ver_ok_rx
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

	//wire [`sensors_number - 1:0]uart_channel_data;
	
	wire rd_en;
	//wire rd_en_without_DMA_ready;
	wire EoR_from_Mem;
	wire [7:0]data_from_mem;
	wire SoT_to_DMA;
	wire [`sensors_number - 1:0]ok_rx;
	wire EoT_ok_rx;
	
	/*wire sink_ready;
	wire [7:0]avalon_st_data; 
	wire avalon_st_valid;
	wire avalon_st_startofpacket;
	wire avalon_st_endofpacket;*/


//=======================================================
//  Structural coding
//=======================================================


	multiport_access_mem multiport_access_mem(
		.clk(CLOCK_50),
		.uart_channel_data(uart_channel_data),
		.sink_ready(sink_ready),
		.rd_en(rd_en),
		.read_en_without_DMA_ready(rd_en_without_DMA_ready),
		.EoR_from_Mem(EoR_from_Mem),
		.data_from_mem(data_from_mem),
		.SoT_to_DMA(SoT_to_DMA),
		.ok_rx(ok_rx),
		.EoT_ok_rx(EoT_ok_rx),
		.pon(Pon)); 

	transmit_unified_SP_to_DMA transmit_unified_SP_to_DMA (
		.clk(CLOCK_50),
		.rd_en(rd_en),
		.rd_en_without_DMA_ready(rd_en_without_DMA_ready),
		.EoR_from_Mem(EoR_from_Mem),
		.data_from_mem(data_from_mem),
		.sink_ready(sink_ready),
		.SoT_to_DMA(SoT_to_DMA),
		.ok_rx(ok_rx),
		.EoT_ok_rx(EoT_ok_rx),
		.avalon_st_data(avalon_st_data), 
		.avalon_st_valid(avalon_st_valid), 
		.avalon_st_startofpacket(avalon_st_startofpacket),
		.avalon_st_endofpacket(avalon_st_endofpacket),
		.trans_en_ok_rx(trans_en_ok_rx),
		.trans_en_CRC(trans_en_CRC),
		.ver_ok_rx(ver_ok_rx)); 
	
endmodule
